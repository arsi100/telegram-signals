steps:
# Step 1: Build the custom Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-fxn-images/cloud-fxn-image:$COMMIT_SHA', '.']

# Step 2: Push the Docker image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-fxn-images/cloud-fxn-image:$COMMIT_SHA']

# Step 3: Deploy Cloud Function from the custom Docker image
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - functions
    - deploy
    - run_signal_generation # Your function name
    - --docker-image=us-central1-docker.pkg.dev/$PROJECT_ID/cloud-fxn-images/cloud-fxn-image:$COMMIT_SHA
    - --gen2
    - --trigger-http
    - --region=us-central1
    - --project=telegram-signals-205cc
    - --memory=512M
    - --cpu=1
    - --timeout=300s
    - --min-instances=0
    - --max-instances=2
    - --set-secrets=GEMINI_API_KEY=GEMINI_API_KEY:latest,TELEGRAM_BOT_TOKEN=TELEGRAM_BOT_TOKEN:latest,TELEGRAM_CHAT_ID=TELEGRAM_CHAT_ID:latest,CRYPTOCOMPARE_API_KEY=CRYPTOCOMPARE_API_KEY:latest,LUNARCRUSH_API_KEY=LUNARCRUSH_API_KEY:latest
    - --allow-unauthenticated

# availableSecrets:
#   secretManager:
#   - versionName: projects/$PROJECT_ID/secrets/GEMINI_API_KEY/versions/latest
#     env: 'GEMINI_API_KEY' # Not strictly needed by function, but good for build context if required
#   - versionName: projects/$PROJECT_ID/secrets/TELEGRAM_BOT_TOKEN/versions/latest
#     env: 'TELEGRAM_BOT_TOKEN'
#   - versionName: projects/$PROJECT_ID/secrets/TELEGRAM_CHAT_ID/versions/latest
#     env: 'TELEGRAM_CHAT_ID'
#   - versionName: projects/$PROJECT_ID/secrets/CRYPTOCOMPARE_API_KEY/versions/latest
#     env: 'CRYPTOCOMPARE_API_KEY'
#   - versionName: projects/$PROJECT_ID/secrets/FIREBASE_PROJECT_ID/versions/latest
#     env: 'FIREBASE_PROJECT_ID'

options:
  logging: CLOUD_LOGGING_ONLY # Use Cloud Logging for build logs
  # Required for user-managed trigger service account
  dynamicSubstitutions: true # Allows use of variables like $PROJECT_ID
  # defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET # No - use default

# The serviceAccount key is removed from here to allow Cloud Build to use its default service account.
# Triggering build after Org Policy update.

# Test push to GCR for diagnostic - switching from Artifact Registry

# Trigger rebuild comment

# Re-triggering build after enabling Container Registry API.

# Re-triggering build after granting Artifact Registry permissions to secondary Cloud Build SA.

# Re-triggering build after granting repository-level IAM permissions.

# Re-triggering build after granting Storage Admin role.